name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    runs-on: ubuntu-latest

    steps:
    - name: set tag env
      run: echo "DOCKER_TAG=127.0.0.1:12345/baazargpt-app:$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      env: 
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} 
      run: ./gradlew build

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.DOCKER_TAG }}

    - name: setup ssh connection
      run: |
        echo "${{ secrets.BACKEND_SSH_KEY }}" > $(pwd)/private_key
        chmod 600 $(pwd)/private_key
        ssh -o "IdentitiesOnly=yes" -i $(pwd)/private_key -o 'StrictHostKeyChecking=no' -o 'UpdateHostKeys=no' -M -S server-socket -fnNT -L 12345:${{ secrets.BACKEND_SSH_HOST }}:12345 ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }}

    - name: Push the docker image
      run: docker push ${{ env.DOCKER_TAG }}

    - name: generate docker compose manifest and upload
      run: |
        touch bazaarapp.env
        APP_IMAGE=$(docker images --no-trunc --quiet ${{ env.DOCKER_TAG }}) docker compose -f docker-compose.yml -f docker-compose.prod.yml config > docker-compose.manifest.yml
        ssh -o "IdentitiesOnly=yes" -i $(pwd)/private_key -o 'StrictHostKeyChecking=no' -o 'UpdateHostKeys=no' ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }} mkdir -p /docker-compose-manifests/bazargpt/
        scp -o "IdentitiesOnly=yes" -i $(pwd)/private_key -o 'StrictHostKeyChecking=no' -o 'UpdateHostKeys=no' docker-compose.manifest.yml ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }}:/docker-compose-manifests/bazargpt/docker-compose.manifest.yml
        scp -o "IdentitiesOnly=yes" -i $(pwd)/private_key -o 'StrictHostKeyChecking=no' -o 'UpdateHostKeys=no' docker-compose.prod-secrets.yml ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }}:/docker-compose-manifests/bazargpt/docker-compose.prod-secrets.yml
        ssh -o "IdentitiesOnly=yes" -i $(pwd)/private_key -o 'StrictHostKeyChecking=no' -o 'UpdateHostKeys=no' ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }} "cd /docker-compose-manifests/bazargpt/ && docker compose -f docker-compose.manifest.yml -f docker-compose.prod-secrets.yml up --detach"
    - name: teardown
      if: always()
      run: |
        ssh -S server-socket -O exit ${{ secrets.BACKEND_SSH_USERNAME }}@${{ secrets.BACKEND_SSH_HOST }}
        rm $(pwd)/private_key
